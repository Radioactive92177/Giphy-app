{"version":3,"sources":["components/Gif.js","components/Gifs.js","components/Loading.js","apis/giphys.js","components/App.js","index.js"],"names":["Gif","gif","title","className","href","src","alt","height","Gifs","renderedGifs","gifData","map","images","fixed_height","url","id","Loading","class","axios","create","baseURL","params","api_key","limit","rating","App","useState","setGifData","term","setTerm","INITIAL_RENDER_TERM","searchSubmit","a","giphys","get","q","data","useEffect","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","aria-hidden","ReactDOM","render","document","querySelector"],"mappings":"6LAaeA,G,KAVH,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAClB,OACE,qBAAKC,UAAU,MAAf,SACE,mBAAGC,KAAI,UAAKH,GAAZ,SACE,qBAAKI,IAAG,UAAKJ,GAAOK,IAAG,UAAKJ,GAASK,OAAO,eCKrCC,EATF,SAAC,GAAiB,IACvBC,EADsB,EAAdC,QACeC,KAAI,SAACV,GAChC,OACE,cAAC,EAAD,CAAkBC,MAAOD,EAAIC,MAAOD,IAAKA,EAAIW,OAAOC,aAAaC,KAAvDb,EAAIc,OAGlB,OAAO,mCAAGN,K,MCIGO,MAXf,WACE,OACE,sBAAKC,MAAM,eAAX,UACE,wBACA,wBACA,wBACA,4B,QCNSC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,MAAO,IACPC,OAAQ,OC2DGC,EA5DH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACThB,EADS,KACAiB,EADA,OAEQD,mBAAS,IAFjB,mBAETE,EAFS,KAEHC,EAFG,KAGVC,EAAsB,SAGtBC,EAAY,uCAAG,WAAOH,GAAP,iBAAAI,EAAA,4DACN,KAATJ,IACFA,EAAOE,GAFU,SAIIG,EAAOC,IAAI,UAAW,CAC3Cb,OAAQ,CACNc,EAAGP,KANY,gBAIXQ,EAJW,EAIXA,KAKRT,EAAWS,EAAKA,MATG,2CAAH,sDAalBC,qBAAU,WACRN,EAAaD,KACZ,IAOH,OACE,qCACE,uBACE3B,UAAU,OACVmC,SAAU,SAACC,GACTA,EAAEC,iBACFT,EAAaH,IAJjB,UAOE,uBACEa,KAAK,SACLC,YAAY,qBACZC,MAAOf,EACPgB,SAAU,SAACL,GAAD,OAAOV,EAAQU,EAAEM,OAAOF,UAEpC,wBAAQF,KAAK,SAAb,SACE,mBAAGtC,UAAU,sBAGjB,qBAAKA,UAAU,UAAf,SACE,wCACS,mBAAGA,UAAU,aAAa2C,cAAY,SAAY,SAI7D,qBAAK3C,UAAU,OAAf,SACGO,IAAY,GAAK,cAAC,EAAD,IA7Bf,cAAC,EAAD,CAAMA,QAASA,UC3B1BqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,W","file":"static/js/main.66e1eef2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../assets/main.css\";\n\nconst Gif = ({ gif, title }) => {\n  return (\n    <div className=\"gif\">\n      <a href={`${gif}`}>\n        <img src={`${gif}`} alt={`${title}`} height=\"auto\" />\n      </a>\n    </div>\n  );\n};\n\nexport default Gif;\n","import React from \"react\";\nimport Gif from \"./Gif\";\n\nconst Gifs = ({ gifData }) => {\n  const renderedGifs = gifData.map((gif) => {\n    return (\n      <Gif key={gif.id} title={gif.title} gif={gif.images.fixed_height.url} />\n    );\n  });\n  return <>{renderedGifs}</>;\n};\n\nexport default Gifs;\n","import React from \"react\";\nimport \"../assets/loading.css\";\nfunction Loading() {\n  return (\n    <div class=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n}\n\nexport default Loading;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.giphy.com/v1/gifs\",\n  params: {\n    api_key: \"K2FCdWBxSOePBye1tBcbmNf3VidnkaZZ\",\n    limit: 500,\n    rating: \"r\",\n  },\n});\n","import React, { useState, useEffect } from \"react\";\nimport Gifs from \"./Gifs\";\nimport Loading from \"./Loading\";\nimport \"../assets/main.css\";\nimport giphys from \"../apis/giphys\";\n\nconst App = () => {\n  const [gifData, setGifData] = useState([]); //* to store GIFs\n  const [term, setTerm] = useState(\"\"); //* to store the search term\n  const INITIAL_RENDER_TERM = \"random\"; //* to show at initial screen\n\n  //? Fetching GIFs\n  const searchSubmit = async (term) => {\n    if (term === \"\") {\n      term = INITIAL_RENDER_TERM;\n    }\n    const { data } = await giphys.get(\"/search\", {\n      params: {\n        q: term,\n      },\n    });\n    setGifData(data.data);\n  };\n\n  //? For GIFs at initial render\n  useEffect(() => {\n    searchSubmit(INITIAL_RENDER_TERM);\n  }, []);\n\n  //? For rendering GIFs with loading condition\n  const renderGiphys = () => {\n    return <Gifs gifData={gifData} />;\n  };\n\n  return (\n    <>\n      <form\n        className=\"form\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          searchSubmit(term);\n        }}\n      >\n        <input\n          type=\"search\"\n          placeholder=\"Search for any GIF\"\n          value={term}\n          onChange={(e) => setTerm(e.target.value)}\n        />\n        <button type=\"submit\">\n          <i className=\"fa fa-search\"></i>\n        </button>\n      </form>\n      <div className=\"heading\">\n        <p>\n          Giphys <i className=\"fa fa-bolt\" aria-hidden=\"true\"></i>{\" \"}\n        </p>\n      </div>\n\n      <div className=\"gifs\">\n        {gifData === [] ? <Loading /> : renderGiphys()}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}